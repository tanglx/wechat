server:
  port: 11000

spring:
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      url: jdbc:mysql://140.143.231.91:3306/wechat?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
      username: root
      password: 123123
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: admin
        login-password: 123123
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  redis:
    database: 0
    host: 140.143.231.91
    password: 123123
    port: 6379
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: 1000ms
      shutdown-timeout: 100ms
  quartz:
    job-store-type: jdbc # quartz任务存储类型：jdbc或memory
    wait-for-jobs-to-complete-on-shutdown: true # 关闭时等待任务完成
    overwrite-existing-jobs: true # 可以覆盖已有的任务
    jdbc:
      initialize-schema: never # 是否自动使用 SQL 初始化 Quartz 表结构
    properties: # quartz原生配置
      org:
        quartz:
          scheduler:
            instanceName: scheduler # 调度器实例名称
            instanceId: AUTO # 调度器实例ID自动生成
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX # 调度信息存储处理类
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate # 使用完全兼容JDBC的驱动
            tablePrefix: QRTZ_ # quartz相关表前缀
            useProperties: false # 是否将JobDataMap中的属性转为字符串存储
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool # 指定线程池实现类，对调度器提供固定大小的线程池
            threadCount: 10 # 设置并发线程数量
            threadPriority: 5 # 指定线程优先级

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: mapper/*.xml
  global-config:
    db-config:
      logic-delete-value: 0 #逻辑已删除值(默认为 1)
      logic-not-delete-value: 1 #逻辑未删除值(默认为 0)
#logging:
#  level:
#    root: debug

wechat:
  appid: wxe323a3ff8027d3db
  secret: 85deb25a1ee5b6ed0081b1bfb9c1bb55
  token: tanglingxiao
  encodingAESKey: 6lS7dL7UjRqaw2NOvndKQkYthkeMSV9MZxExQMzYpvA

wx:
  mp:
    useRedis: true
    redisConfig:
      host: ${spring.redis.host}
      port: ${spring.redis.port}
      password: ${spring.redis.password}
      timeout: 2000
    configs:
      - appId: wxe323a3ff8027d3db # 第一个公众号的appid
        secret: 85deb25a1ee5b6ed0081b1bfb9c1bb55 # 公众号的appsecret
        token: tanglingxiao # 接口配置里的Token值
        aesKey: 6lS7dL7UjRqaw2NOvndKQkYthkeMSV9MZxExQMzYpvA # 接口配置里的EncodingAESKey值
#wx:
#  mp:
#    aesKey: 6lS7dL7UjRqaw2NOvndKQkYthkeMSV9MZxExQMzYpvA
#    appId: wxe323a3ff8027d3db
#    secret: 85deb25a1ee5b6ed0081b1bfb9c1bb55
#    token: tanglingxiao
#    config-storage:
#      # http客户端配置
#      http-client-type: HttpClient
#      http-proxy-host:
#      http-proxy-password:
#      http-proxy-port:
#      http-proxy-username:
#      # 存储配置redis
#      key-prefix: 123123
#      type: RedisTemplate
#      redis:
#        host: 127.0.0.1
#        port: 6379
